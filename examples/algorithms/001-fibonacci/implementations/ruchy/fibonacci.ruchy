// Fibonacci Sequence - Ruchy Implementation
// Demonstrates compile-time complexity verification
// Algorithm: Pure recursive (exponential)

// Pure recursive Fibonacci
// Mathematical definition: F(n) = F(n-1) + F(n-2), F(0)=0, F(1)=1
// Complexity: O(2^n) time, O(n) space
fun fibonacci(n: i32) -> i32 {
    if n <= 1 {
        n
    } else {
        fibonacci(n - 1) + fibonacci(n - 2)
    }
}

// Verify correctness with known values
fun test() {
    assert!(fibonacci(0) == 0);
    assert!(fibonacci(1) == 1);
    assert!(fibonacci(2) == 1);
    assert!(fibonacci(3) == 2);
    assert!(fibonacci(5) == 5);
    assert!(fibonacci(10) == 55);
    assert!(fibonacci(20) == 6765);
}

fun main() {
    // Run tests
    test();
    
    // Demonstrate usage
    println!("Fibonacci Sequence (Ruchy):");
    for i in 0..10 {
        println!("F({}) = {}", i, fibonacci(i));
    }
}