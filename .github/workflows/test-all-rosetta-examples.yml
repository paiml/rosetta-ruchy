name: Rosetta-Ruchy Comprehensive Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every 6 hours to detect Ruchy version regressions
    - cron: '0 */6 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  test-all-examples:
    name: Test ALL Examples (Algorithms + Data Science + AI)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install Ruchy
        run: |
          cargo install ruchy
          ruchy --version

      - name: Run Comprehensive Test Suite
        id: test
        run: |
          make test-all-examples
        continue-on-error: true

      - name: Extract Test Results
        id: results
        if: always()
        run: |
          if [ -f test-results.json ]; then
            SUCCESS_RATE=$(jq -r '.summary.success_rate' test-results.json)
            TOTAL=$(jq -r '.summary.total' test-results.json)
            PASSED=$(jq -r '.summary.passed' test-results.json)
            FAILED=$(jq -r '.summary.failed' test-results.json)
            RUCHY_VERSION=$(jq -r '.summary.ruchy_version' test-results.json)

            echo "success_rate=$SUCCESS_RATE" >> $GITHUB_OUTPUT
            echo "total=$TOTAL" >> $GITHUB_OUTPUT
            echo "passed=$PASSED" >> $GITHUB_OUTPUT
            echo "failed=$FAILED" >> $GITHUB_OUTPUT
            echo "ruchy_version=$RUCHY_VERSION" >> $GITHUB_OUTPUT
          else
            echo "success_rate=0" >> $GITHUB_OUTPUT
            echo "total=0" >> $GITHUB_OUTPUT
            echo "passed=0" >> $GITHUB_OUTPUT
            echo "failed=0" >> $GITHUB_OUTPUT
            echo "ruchy_version=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Upload Test Results Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.json
          retention-days: 90

      - name: Comment on PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let comment = `## 🧪 Rosetta-Ruchy Test Results\n\n`;

            if (fs.existsSync('test-results.json')) {
              const results = JSON.parse(fs.readFileSync('test-results.json', 'utf8'));

              comment += `**Ruchy Version**: ${results.summary.ruchy_version}\n`;
              comment += `**Success Rate**: ${results.summary.success_rate.toFixed(1)}% (${results.summary.passed}/${results.summary.total} examples)\n\n`;

              comment += `### By Category\n`;
              for (const [category, stats] of Object.entries(results.by_category)) {
                const emoji = stats.success_rate >= 90 ? '✅' : stats.success_rate >= 75 ? '⚠️' : '❌';
                comment += `${emoji} **${category}**: ${stats.passed}/${stats.total} (${stats.success_rate.toFixed(1)}%)\n`;
              }

              if (Object.keys(results.by_error).length > 0) {
                comment += `\n### Error Summary\n`;
                for (const [error, count] of Object.entries(results.by_error)) {
                  comment += `- **${error}**: ${count} examples\n`;
                }
              }

              // Show sample failures
              const failures = results.results.filter(r => !r.passed).slice(0, 5);
              if (failures.length > 0) {
                comment += `\n### Sample Failures (first 5)\n`;
                for (const failure of failures) {
                  comment += `- \`${failure.path.replace('examples/', '')}\`\n`;
                }
              }

              // Add regression detection
              if (results.summary.success_rate < 85) {
                comment += `\n⚠️ **WARNING**: Success rate below 85% threshold!\n`;
              }
            } else {
              comment += `❌ Test execution failed - no results available\n`;
            }

            comment += `\n---\n*Generated by rosetta-ruchy test infrastructure*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Check Regression Threshold
        if: always()
        run: |
          if [ -f test-results.json ]; then
            SUCCESS_RATE=$(jq -r '.summary.success_rate' test-results.json)
            if [ "$(echo "$SUCCESS_RATE < 85" | bc -l)" -eq 1 ]; then
              echo "::error::REGRESSION DETECTED: Success rate $SUCCESS_RATE% is below 85% threshold"
              exit 1
            else
              echo "::notice::Success rate is $SUCCESS_RATE% (above 85% threshold)"
            fi
          else
            echo "::error::No test results found"
            exit 1
          fi

      - name: Generate Summary
        if: always()
        run: |
          if [ -f test-results.json ]; then
            echo "## 📊 Test Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            SUCCESS_RATE=$(jq -r '.summary.success_rate' test-results.json)
            TOTAL=$(jq -r '.summary.total' test-results.json)
            PASSED=$(jq -r '.summary.passed' test-results.json)
            FAILED=$(jq -r '.summary.failed' test-results.json)
            RUCHY_VERSION=$(jq -r '.summary.ruchy_version' test-results.json)

            echo "**Ruchy Version**: $RUCHY_VERSION" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- **Total Examples**: $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "- **Passed**: ✅ $PASSED ($SUCCESS_RATE%)" >> $GITHUB_STEP_SUMMARY
            echo "- **Failed**: ❌ $FAILED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # Category breakdown
            echo "### By Category" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            jq -r '.by_category | to_entries[] | "- **\(.key)**: \(.value.passed)/\(.value.total) (\(.value.success_rate)%)"' test-results.json >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Test execution failed" >> $GITHUB_STEP_SUMMARY
          fi

  quality-gate:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: test-all-examples

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install Development Tools
        run: |
          cargo install cargo-tarpaulin cargo-audit || true
          cargo install ruchy

      - name: Run Quality Gates
        run: |
          make lint || echo "Lint warnings detected"
          make test || echo "Some tests failed"

      - name: Security Audit
        run: |
          make security || echo "Security issues detected"
